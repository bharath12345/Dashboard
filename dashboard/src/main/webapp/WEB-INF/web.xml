<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
    <display-name>AppsOne Dashboard</display-name>
    
    <welcome-file-list>
        <welcome-file>signin.jsp</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>

    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    	<init-param>
        	<param-name>actionPackages</param-name>
        	<param-value>com.appnomic.appsone.dashboard.action</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <listener>
    	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <filter>
        <filter-name>http-context-filter</filter-name>
        <filter-class>com.appnomic.appsone.dashboard.filter.HttpContextFilter</filter-class>
    </filter>

    <!-- The Struts 2 filter should be mapped to ALL requests coming into the
        web application. As a filter, it can let the non-struts requests pass through
        and they will arrive at which ever servlets to which they may be mapped.
        When the filter recognizes a Struts 2 request, typically by the .action extension,
        the normal filter chaining of a web application is aborted and the request
        is completely handled by the Struts 2 system. -->

    <filter-mapping>
        <filter-name>http-context-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--login-config>
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/signin.jsp</form-login-page>
            <form-error-page>/error.jsp</form-error-page>
        </form-login-config>
    </login-config>

    <security-role>
        <role-name>admin</role-name>
    </security-role>
    <security-role>
        <role-name>user</role-name>
    </security-role>

    <security-constraint>
        <display-name>AppsOne Protected Resources</display-name>
        <web-resource-collection>
            <web-resource-name>Protected Resources accessible only to admin</web-resource-name>
            <description>Require users to authenticate to access one of these protected URLs</description>
            <url-pattern>*.jsp</url-pattern>
            <http-method>POST</http-method>
            <http-method>GET</http-method>
        </web-resource-collection>

        <auth-constraint>
            <description>Only allow admin roles to access this resource</description>
            <role-name>admin</role-name>
            <role-name>user</role-name>
        </auth-constraint>

        <user-data-constraint>
            <description>Encryption is not required</description>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <security-constraint>
        <display-name>Non Protected Resources</display-name>
        <web-resource-collection>
            <web-resource-name>Resources accessible to any role</web-resource-name>
            <description>Anyone can go to these pages</description>
            <url-pattern>/index.jsp</url-pattern>
            <http-method>POST</http-method>
            <http-method>GET</http-method>
        </web-resource-collection>

        <auth-constraint>
            <description>Let all roles access this resource</description>
            <role-name>admin</role-name>
            <role-name>user</role-name>
        </auth-constraint>

        <user-data-constraint>
            <description>Encryption is not required</description>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint-->

</web-app>
